{"version":3,"sources":["ng://ng-swipe-card/lib/swipe-card.config.ts","ng://ng-swipe-card/lib/swipeable.directive.ts","ng://ng-swipe-card/lib/card-wrapper.component.ts","ng://ng-swipe-card/lib/swipe-card-lib.module.ts"],"names":["SWSwipeCardConfig","this","likeColor","dislikeColor","SW_SWIPE_CARD_DEFAULT_OPTIONS","InjectionToken","providedIn","factory","SW_SWIPE_CARD_DEFAULT_OPTIONS_FACTORY","SwipeableDirective","_defaultConfig","el","renderer","animationDuration","isReleased","fixed","orientation","released","EventEmitter","swiped","className","element","nativeElement","prototype","onPan","event","allowSwipe","handleSwipeChange","onPanEnd","conditionX","includes","releaseRadius","x","Math","abs","deltaX","conditionY","y","deltaY","like","isSwipePositive","handleSwipeEnd","handleCancelSwipe","Object","defineProperty","ngOnDestroy","window","clearTimeout","timeoutId","ngOnInit","initializeOverlay","width","height","overlay","document","createElement","appendChild","translate","_a","_b","rotate","_c","duration","positionX","positionY","setStyle","opacity","distance","offsetWidth","setBackgroundOverlay","clientWidth","resetBackgroundOverlay","destroy","resetElementStyles","removeChild","color","toString","removeOverlay","offsetHeight","clientHeight","_this","setTimeout","emit","simulateSwipe","Directive","args","selector","decorators","type","Inject","ElementRef","Renderer2","HostBinding","Input","Output","HostListener","CardWrapperComponent","ngAfterContentInit","cards","first","dislike","Component","template","styles","ContentChildren","SwipeCardLibModule","NgModule","imports","declarations","exports"],"mappings":"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","sourcesContent":["import {InjectionToken} from '@angular/core';\n\nexport class SWSwipeCardConfig {\n  likeColor?: string = '104,159,56';\n  dislikeColor?: string = '193,3,2';\n}\n\nexport const SW_SWIPE_CARD_DEFAULT_OPTIONS = new InjectionToken('sw-swipe-card-default-options', {\n  providedIn: 'root',\n  factory: SW_SWIPE_CARD_DEFAULT_OPTIONS_FACTORY\n});\n\nexport function SW_SWIPE_CARD_DEFAULT_OPTIONS_FACTORY() {\n  return new SWSwipeCardConfig();\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output, Renderer2,\n} from '@angular/core';\nimport {SW_SWIPE_CARD_DEFAULT_OPTIONS, SWSwipeCardConfig} from './swipe-card.config';\n\n@Directive({\n  selector: '[swSwipeable]',\n})\nexport class SwipeableDirective implements OnInit, OnDestroy {\n  private readonly animationDuration = 200;\n  private isReleased: Boolean = false;\n  private element: HTMLElement;\n  private overlay: HTMLElement;\n  private releaseRadius: { x: number, y: number };\n  private timeoutId: number;\n\n  @HostBinding('style.width.px')\n  @Input()\n  public width: number;\n\n  @HostBinding('style.height.px')\n  @Input()\n  public height: number;\n\n  @Input()\n  public fixed: Boolean = false;\n\n  @Input()\n  public orientation = 'xy';\n\n  @Output()\n  public released = new EventEmitter();\n\n  @Output()\n  public swiped = new EventEmitter<boolean>();\n\n  @HostBinding('class.swipe-card-heap')\n  public className = true;\n\n  @HostListener('pan', ['$event'])\n  onPan(event: any) {\n    if (this.allowSwipe) {\n      this.handleSwipeChange(event);\n    }\n  }\n\n  @HostListener('panend', ['$event'])\n  onPanEnd(event: any) {\n    if (this.allowSwipe) {\n      const conditionX = this.orientation.includes('x') && this.releaseRadius.x < Math.abs(event.deltaX || 0);\n      const conditionY = this.orientation.includes('y') && this.releaseRadius.y < Math.abs(event.deltaY || 0);\n      const like = this.isSwipePositive(event);\n\n      (conditionX || conditionY) ? this.handleSwipeEnd(like) : this.handleCancelSwipe();\n    }\n  }\n\n  get allowSwipe(): boolean {\n    return !this.fixed && !this.isReleased;\n  }\n\n  constructor(@Inject(SW_SWIPE_CARD_DEFAULT_OPTIONS) private _defaultConfig: SWSwipeCardConfig,\n              protected el: ElementRef,\n              public renderer: Renderer2) {\n    this.element = el.nativeElement;\n  }\n\n  ngOnDestroy(): void {\n    window.clearTimeout(this.timeoutId);\n  }\n\n  ngOnInit(): void {\n    this.initializeOverlay();\n    this.releaseRadius = {x: this.width / 4, y: this.height / 4};\n  }\n\n  private initializeOverlay(): void {\n    this.overlay = document.createElement('div');\n    this.overlay.className = 'swipe-card-overlay';\n    this.renderer.appendChild(this.element, this.overlay);\n  }\n\n  private translate({x, y, rotate = 0, duration = 0}) {\n    const positionX = x && this.orientation.includes('x') ? (x) : 0;\n    const positionY = y && this.orientation.includes('y') ? (y) : 0;\n\n    this.renderer.setStyle(this.element, 'transition', `transform ${duration}ms ease`);\n    this.renderer.setStyle(this.element, 'webkitTransform', `translate3d(${positionX}px, ${positionY}px, 0) rotate(${rotate}deg)`\n    );\n  }\n\n  private handleSwipeChange(event: any) {\n    const like = this.isSwipePositive(event);\n    const opacity = Math.abs(event.distance) * 0.5 / this.element.offsetWidth;\n\n    this.setBackgroundOverlay(like, opacity);\n    this.translate({\n      x: event.deltaX,\n      y: event.deltaY,\n      rotate: ((event.deltaX * 20) / this.element.clientWidth)\n    });\n  }\n\n  private handleCancelSwipe() {\n    this.resetBackgroundOverlay();\n    this.translate({\n      x: 0,\n      y: 0,\n      rotate: 0,\n      duration: this.animationDuration\n    });\n  }\n\n  private destroy() {\n    this.resetElementStyles();\n    this.resetBackgroundOverlay();\n    this.renderer.removeChild(this.element, this.overlay);\n    this.overlay = null;\n  }\n\n  private setBackgroundOverlay(like: boolean, opacity: number) {\n    const color = like ? this._defaultConfig.likeColor : this._defaultConfig.dislikeColor;\n\n    this.renderer.setStyle(this.overlay, 'transition', 'opacity 0s ease');\n    this.renderer.setStyle(this.overlay, 'background-color', `rgba(${color}, ${opacity.toString()})`);\n  }\n\n  private resetBackgroundOverlay(): void {\n    this.renderer.setStyle(this.overlay, 'transition', `opacity ${this.animationDuration}ms ease`);\n    this.renderer.setStyle(this.overlay, 'background-color', 'rgba(255,255,255,0)');\n  }\n\n  private resetElementStyles(): void {\n    this.renderer.setStyle(this.element, 'transition', 'transform 0s ease');\n    this.renderer.setStyle(this.element, 'webkitTransform', 'translate3d(0, 0, 0) rotate(0deg)');\n  }\n\n  private isSwipePositive(event): boolean {\n    return (this.orientation === 'y' && event.deltaY < 0) || (this.orientation !== 'y' && event.deltaX > 0);\n  }\n\n  private removeOverlay(like: boolean): void {\n    const {offsetHeight, offsetWidth, clientHeight, clientWidth} = this.element;\n    const y = (offsetHeight + clientHeight) * (like ? -1 : 1);\n    const x = (offsetWidth + clientWidth) * (like ? 1 : -1);\n\n    this.setBackgroundOverlay(like, 0.35);\n    this.translate({\n      x, y,\n      rotate: (x * 20) / clientWidth,\n      duration: 800\n    });\n  }\n\n  private handleSwipeEnd(like: boolean): void {\n    this.removeOverlay(like);\n    this.isReleased = true;\n\n    this.timeoutId = window.setTimeout(() => {\n      this.swiped.emit(like);\n      this.released.emit();\n      this.destroy();\n    }, this.animationDuration);\n  }\n\n  public simulateSwipe(like: boolean) {\n    this.handleSwipeEnd(like);\n  }\n}\n","import {AfterContentInit, Component, ContentChildren, OnInit, QueryList} from '@angular/core';\nimport {SwipeableDirective} from './swipeable.directive';\n\n@Component({\n  selector: 'sw-card-wrapper',\n  template: `\n    <ng-content></ng-content>`,\n  styles: [`:host {\n    position: relative;\n    display: block;\n  }`]\n})\nexport class CardWrapperComponent implements OnInit, AfterContentInit {\n  @ContentChildren(SwipeableDirective)\n  public cards: QueryList<SwipeableDirective>;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterContentInit(): void {\n  }\n\n  public like(): void {\n    if (this.cards.first) {\n      this.cards.first.simulateSwipe(true);\n    }\n  }\n\n  public dislike(): void {\n    if (this.cards.first) {\n      this.cards.first.simulateSwipe(false);\n    }\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CardWrapperComponent} from './card-wrapper.component';\nimport {SwipeableDirective} from './swipeable.directive';\n\n@NgModule({\n  imports: [],\n  declarations: [CardWrapperComponent, SwipeableDirective],\n  exports: [CardWrapperComponent, SwipeableDirective]\n})\nexport class SwipeCardLibModule {\n}\n"]}