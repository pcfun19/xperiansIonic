(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('ng-swipe-card', ['exports', '@angular/core'], factory) :
    (factory((global['ng-swipe-card'] = {}),global.ng.core));
}(this, (function (exports,core) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */
    var SWSwipeCardConfig = (function () {
        function SWSwipeCardConfig() {
            this.likeColor = '104,159,56';
            this.dislikeColor = '193,3,2';
        }
        return SWSwipeCardConfig;
    }());
    /** @type {?} */
    var SW_SWIPE_CARD_DEFAULT_OPTIONS = new core.InjectionToken('sw-swipe-card-default-options', {
        providedIn: 'root',
        factory: SW_SWIPE_CARD_DEFAULT_OPTIONS_FACTORY
    });
    /**
     * @return {?}
     */
    function SW_SWIPE_CARD_DEFAULT_OPTIONS_FACTORY() {
        return new SWSwipeCardConfig();
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */
    var SwipeableDirective = (function () {
        function SwipeableDirective(_defaultConfig, el, renderer) {
            this._defaultConfig = _defaultConfig;
            this.el = el;
            this.renderer = renderer;
            this.animationDuration = 200;
            this.isReleased = false;
            this.fixed = false;
            this.orientation = 'xy';
            this.released = new core.EventEmitter();
            this.swiped = new core.EventEmitter();
            this.className = true;
            this.element = el.nativeElement;
        }
        /**
         * @param {?} event
         * @return {?}
         */
        SwipeableDirective.prototype.onPan = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                if (this.allowSwipe) {
                    this.handleSwipeChange(event);
                }
            };
        /**
         * @param {?} event
         * @return {?}
         */
        SwipeableDirective.prototype.onPanEnd = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                if (this.allowSwipe) {
                    /** @type {?} */
                    var conditionX = this.orientation.includes('x') && this.releaseRadius.x < Math.abs(event.deltaX || 0);
                    /** @type {?} */
                    var conditionY = this.orientation.includes('y') && this.releaseRadius.y < Math.abs(event.deltaY || 0);
                    /** @type {?} */
                    var like = this.isSwipePositive(event);
                    (conditionX || conditionY) ? this.handleSwipeEnd(like) : this.handleCancelSwipe();
                }
            };
        Object.defineProperty(SwipeableDirective.prototype, "allowSwipe", {
            get: /**
             * @return {?}
             */ function () {
                return !this.fixed && !this.isReleased;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        SwipeableDirective.prototype.ngOnDestroy = /**
         * @return {?}
         */
            function () {
                window.clearTimeout(this.timeoutId);
            };
        /**
         * @return {?}
         */
        SwipeableDirective.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                this.initializeOverlay();
                this.releaseRadius = { x: this.width / 4, y: this.height / 4 };
            };
        /**
         * @return {?}
         */
        SwipeableDirective.prototype.initializeOverlay = /**
         * @return {?}
         */
            function () {
                this.overlay = document.createElement('div');
                this.overlay.className = 'swipe-card-overlay';
                this.renderer.appendChild(this.element, this.overlay);
            };
        /**
         * @param {?} __0
         * @return {?}
         */
        SwipeableDirective.prototype.translate = /**
         * @param {?} __0
         * @return {?}
         */
            function (_a) {
                var x = _a.x, y = _a.y, _b = _a.rotate, rotate = _b === void 0 ? 0 : _b, _c = _a.duration, duration = _c === void 0 ? 0 : _c;
                /** @type {?} */
                var positionX = x && this.orientation.includes('x') ? (x) : 0;
                /** @type {?} */
                var positionY = y && this.orientation.includes('y') ? (y) : 0;
                this.renderer.setStyle(this.element, 'transition', "transform " + duration + "ms ease");
                this.renderer.setStyle(this.element, 'webkitTransform', "translate3d(" + positionX + "px, " + positionY + "px, 0) rotate(" + rotate + "deg)");
            };
        /**
         * @param {?} event
         * @return {?}
         */
        SwipeableDirective.prototype.handleSwipeChange = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                /** @type {?} */
                var like = this.isSwipePositive(event);
                /** @type {?} */
                var opacity = Math.abs(event.distance) * 0.5 / this.element.offsetWidth;
                this.setBackgroundOverlay(like, opacity);
                this.translate({
                    x: event.deltaX,
                    y: event.deltaY,
                    rotate: ((event.deltaX * 20) / this.element.clientWidth)
                });
            };
        /**
         * @return {?}
         */
        SwipeableDirective.prototype.handleCancelSwipe = /**
         * @return {?}
         */
            function () {
                this.resetBackgroundOverlay();
                this.translate({
                    x: 0,
                    y: 0,
                    rotate: 0,
                    duration: this.animationDuration
                });
            };
        /**
         * @return {?}
         */
        SwipeableDirective.prototype.destroy = /**
         * @return {?}
         */
            function () {
                this.resetElementStyles();
                this.resetBackgroundOverlay();
                this.renderer.removeChild(this.element, this.overlay);
                this.overlay = null;
            };
        /**
         * @param {?} like
         * @param {?} opacity
         * @return {?}
         */
        SwipeableDirective.prototype.setBackgroundOverlay = /**
         * @param {?} like
         * @param {?} opacity
         * @return {?}
         */
            function (like, opacity) {
                /** @type {?} */
                var color = like ? this._defaultConfig.likeColor : this._defaultConfig.dislikeColor;
                this.renderer.setStyle(this.overlay, 'transition', 'opacity 0s ease');
                this.renderer.setStyle(this.overlay, 'background-color', "rgba(" + color + ", " + opacity.toString() + ")");
            };
        /**
         * @return {?}
         */
        SwipeableDirective.prototype.resetBackgroundOverlay = /**
         * @return {?}
         */
            function () {
                this.renderer.setStyle(this.overlay, 'transition', "opacity " + this.animationDuration + "ms ease");
                this.renderer.setStyle(this.overlay, 'background-color', 'rgba(255,255,255,0)');
            };
        /**
         * @return {?}
         */
        SwipeableDirective.prototype.resetElementStyles = /**
         * @return {?}
         */
            function () {
                this.renderer.setStyle(this.element, 'transition', 'transform 0s ease');
                this.renderer.setStyle(this.element, 'webkitTransform', 'translate3d(0, 0, 0) rotate(0deg)');
            };
        /**
         * @param {?} event
         * @return {?}
         */
        SwipeableDirective.prototype.isSwipePositive = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                return (this.orientation === 'y' && event.deltaY < 0) || (this.orientation !== 'y' && event.deltaX > 0);
            };
        /**
         * @param {?} like
         * @return {?}
         */
        SwipeableDirective.prototype.removeOverlay = /**
         * @param {?} like
         * @return {?}
         */
            function (like) {
                var _a = this.element, offsetHeight = _a.offsetHeight, offsetWidth = _a.offsetWidth, clientHeight = _a.clientHeight, clientWidth = _a.clientWidth;
                /** @type {?} */
                var y = (offsetHeight + clientHeight) * (like ? -1 : 1);
                /** @type {?} */
                var x = (offsetWidth + clientWidth) * (like ? 1 : -1);
                this.setBackgroundOverlay(like, 0.35);
                this.translate({
                    x: x, y: y,
                    rotate: (x * 20) / clientWidth,
                    duration: 800
                });
            };
        /**
         * @param {?} like
         * @return {?}
         */
        SwipeableDirective.prototype.handleSwipeEnd = /**
         * @param {?} like
         * @return {?}
         */
            function (like) {
                var _this = this;
                this.removeOverlay(like);
                this.isReleased = true;
                this.timeoutId = window.setTimeout(function () {
                    _this.swiped.emit(like);
                    _this.released.emit();
                    _this.destroy();
                }, this.animationDuration);
            };
        /**
         * @param {?} like
         * @return {?}
         */
        SwipeableDirective.prototype.simulateSwipe = /**
         * @param {?} like
         * @return {?}
         */
            function (like) {
                this.handleSwipeEnd(like);
            };
        SwipeableDirective.decorators = [
            { type: core.Directive, args: [{
                        selector: '[swSwipeable]',
                    },] },
        ];
        SwipeableDirective.ctorParameters = function () {
            return [
                { type: SWSwipeCardConfig, decorators: [{ type: core.Inject, args: [SW_SWIPE_CARD_DEFAULT_OPTIONS,] }] },
                { type: core.ElementRef },
                { type: core.Renderer2 }
            ];
        };
        SwipeableDirective.propDecorators = {
            width: [{ type: core.HostBinding, args: ['style.width.px',] }, { type: core.Input }],
            height: [{ type: core.HostBinding, args: ['style.height.px',] }, { type: core.Input }],
            fixed: [{ type: core.Input }],
            orientation: [{ type: core.Input }],
            released: [{ type: core.Output }],
            swiped: [{ type: core.Output }],
            className: [{ type: core.HostBinding, args: ['class.swipe-card-heap',] }],
            onPan: [{ type: core.HostListener, args: ['pan', ['$event'],] }],
            onPanEnd: [{ type: core.HostListener, args: ['panend', ['$event'],] }]
        };
        return SwipeableDirective;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */
    var CardWrapperComponent = (function () {
        function CardWrapperComponent() {
        }
        /**
         * @return {?}
         */
        CardWrapperComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
            };
        /**
         * @return {?}
         */
        CardWrapperComponent.prototype.ngAfterContentInit = /**
         * @return {?}
         */
            function () {
            };
        /**
         * @return {?}
         */
        CardWrapperComponent.prototype.like = /**
         * @return {?}
         */
            function () {
                if (this.cards.first) {
                    this.cards.first.simulateSwipe(true);
                }
            };
        /**
         * @return {?}
         */
        CardWrapperComponent.prototype.dislike = /**
         * @return {?}
         */
            function () {
                if (this.cards.first) {
                    this.cards.first.simulateSwipe(false);
                }
            };
        CardWrapperComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'sw-card-wrapper',
                        template: "\n    <ng-content></ng-content>",
                        styles: [":host {\n    position: relative;\n    display: block;\n  }"]
                    },] },
        ];
        CardWrapperComponent.ctorParameters = function () { return []; };
        CardWrapperComponent.propDecorators = {
            cards: [{ type: core.ContentChildren, args: [SwipeableDirective,] }]
        };
        return CardWrapperComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */
    var SwipeCardLibModule = (function () {
        function SwipeCardLibModule() {
        }
        SwipeCardLibModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [],
                        declarations: [CardWrapperComponent, SwipeableDirective],
                        exports: [CardWrapperComponent, SwipeableDirective]
                    },] },
        ];
        return SwipeCardLibModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
     */

    exports.SwipeCardLibModule = SwipeCardLibModule;
    exports.SWSwipeCardConfig = SWSwipeCardConfig;
    exports.SW_SWIPE_CARD_DEFAULT_OPTIONS = SW_SWIPE_CARD_DEFAULT_OPTIONS;
    exports.SW_SWIPE_CARD_DEFAULT_OPTIONS_FACTORY = SW_SWIPE_CARD_DEFAULT_OPTIONS_FACTORY;
    exports.SwipeableDirective = SwipeableDirective;
    exports.CardWrapperComponent = CardWrapperComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,